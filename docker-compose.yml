version: '3'

services:
  frontendreact:
    image: 'node:10-alpine'
    container_name: Frontend-React
    restart: unless-stopped
    working_dir: /myapp/frontend
    volumes:
      - ./frontend_service:/myapp/frontend
    ports:
      - '3000:3000'
    command: 'yarn start'

  auth_service:
    build: ./auth_service
    container_name: Auth_service
    restart: unless-stopped
    working_dir: /usr/src/app
    volumes:
      - ./auth_service:/usr/src/app
    ports:
      - '30001:30001'
    depends_on:
      - mongo
    networks:
      - app-network
    command: 'yarn start'

  mongo:
    image: mongo
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 123456
    volumes:
      - ./auth_service/user_data:/data/db
    networks:
      - app-network

  kong_API_Gateway:
    container_name: kong_API_Gateway
    image: kong
    restart: always
    # networks:
    #   - kong
    environment:
      KONG_DATABASE: 'off'
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_LOG_LEVEL: warn
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl, 0.0.0.0:9080 http2, 0.0.0.0:9081 http2 ssl
    healthcheck:
      test: ['CMD', 'kong', 'health']
      interval: 120s
      timeout: 10s
      retries: 3
    volumes:
      - ./API_Gateway_service/compose/kong/logs:/usr/local/kong/logs
      - ./API_Gateway_service/compose/kong/logs/log.txt:/usr/local/kong/logs/log.txt
      - ./API_Gateway_service/compose/kong/declarative:/usr/local/kong/declarative
      - ./API_Gateway_service/compose/kong/config/nginx.conf:/usr/local/kong/nginx.conf
      - ./API_Gateway_service/compose/kong/config/nginx-kong.conf:/usr/local/kong/nginx-kong.conf
    ports:
      - '8001:8001'
      - '8444:8444'
      - '8000:8000'
      - '8443:8443'
      - '9080:9080'
      - '9081:9081'

#Docker Networks
networks:
  app-network:
    driver: bridge
  # kong:
  #   driver: bridge
  #   name: kong-network
